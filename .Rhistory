library(readr)
DATASET_POSTULANTES <- read_csv("DATASET_POSTULANTES.csv")
View(DATASET_POSTULANTES)
str(auto_mpg)
str(DATASET_POSTULANTES)
summary(DATASET_POSTULANTES
)
regresion <- lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + model.year + origin,
data = auto_mpg)
library(readr)
auto_mpg <- read_csv("auto-mpg.csv")
View(auto_mpg)
str(auto_mpg)
summary(auto_mpg)
regresion <- lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + model.year + origin,
data = auto_mpg)
regresion <- lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + model.year + origin,
data = auto_mpg)
regresion <- lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + model year + origin,
regresion <- lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + model year + origin,
regresion <- lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + model_year + origin,
data = auto_mpg)
regresion <- lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + model_year + origin,
data = auto_mpg)
str(auto_mpg)
regresion <- lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + model year + origin,
auto_mpg <- read.csv("auto-mpg.csv")
names(auto_mpg) <- c("Millas_por_galon", "Cilindros", "Desplazamiento", "Caballos_de_fuerza",
"Peso", "Aceleracion", "Año_del_modelo", "Origen", "Nombre_del_auto")
names(auto_mpg)
str(auto_mpg)
summary(auto_mpg)
regresion <- lm(Millas_por_galon ~ Cilindros + Desplazamiento + Caballos_de_fuerza + Peso + Aceleracion + Año_del_modelo + Origen,
data = auto_mpg)
summary(regresion)
coef_significativos <- summary(regresion)$coefficients[summary(regresion)$coefficients[,4] < 0.05, ]
print(coef_significativos)
coef_significativos <- summary(regresion)$coefficients[summary(regresion)$coefficients[,4] < 0.05, ]
print(coef_significativos)
variables_impacto <- coef_significativos[abs(coef_significativos[,1]) > 1, ]
print(variables_impacto)
nuevos_datos <- data.frame(Cilindros = 8, Desplazamiento = 300, Caballos_de_fuerza = 150, Peso = 3500,
Aceleracion = 15, Año_del_modelo = 80, Origen = 1)
prediccion <- predict(regresion, nuevos_datos)
nuevos_datos$Caballos_de_fuerza <- as.numeric(nuevos_datos$Caballos_de_fuerza)
prediccion <- predict(regresion, nuevos_datos)
# Realizar la predicción
nuevos_datos$Caballos_de_fuerza <- as.numeric(nuevos_datos$Caballos_de_fuerza)
prediccion <- predict(regresion, nuevos_datos)
unique(nuevos_datos$Caballos_de_fuerza)
nuevos_datos <- nuevos_datos[!is.na(as.numeric(nuevos_datos$Caballos_de_fuerza)), ]
nuevos_datos$Caballos_de_fuerza <- as.numeric(nuevos_datos$Caballos_de_fuerza)
prediccion <- predict(regresion, nuevos_datos)
prediccion <- predict(regresion, nuevos_datos)
nuevos_datos$Caballos_de_fuerza <- as.numeric(gsub("[^0-9.-]", "", nuevos_datos$Caballos_de_fuerza))
nuevos_datos <- nuevos_datos[!is.na(nuevos_datos$Caballos_de_fuerza), ]
prediccion <- predict(regresion, nuevos_datos)
unique(nuevos_datos$Caballos_de_fuerza)
head(nuevos_datos)
unique(nuevos_datos$Caballos_de_fuerza)
unique(nuevos_datos$Caballos_de_fuerza)
prediccion <- predict(regresion, nuevos_datos)
nuevos_datos$Caballos_de_fuerza <- as.numeric(nuevos_datos$Caballos_de_fuerza)
prediccion <- predict(regresion, nuevos_datos)
str(auto_mpg)
library(readr)
auto_mpg <- read_csv("auto-mpg.csv")
View(auto_mpg)
str(auto_mpg)
str(auto_mpg)
library(dplyr)
auto_mpg <- auto_mpg %>%
rename(
consumo_combustible = mpg,
cilindros = cylinders,
desplazamiento = displacement,
potencia = horsepower,
peso = weight,
aceleracion = acceleration,
ano_modelo = `model year`,
origen = origin,
nombre_auto = `car name`
)
# Paso 3: Generar la regresión lineal
regresion <- lm(consumo_combustible ~ cilindros + desplazamiento + potencia + peso + aceleracion + ano_modelo + origen, data = auto_mpg)
summary(regresion)
nuevos_datos <- data.frame(
cilindros = 8,
desplazamiento = 350,
potencia = 165,
peso = 3693,
aceleracion = 11.5,
ano_modelo = 70,
origen = 1
)
predict(regresion, nuevos_datos)
# Convertir la columna "potencia" a tipo numérico
auto_mpg$potencia <- as.numeric(auto_mpg$potencia)
# Verificar si hay NA's después de la conversión
sum(is.na(auto_mpg$potencia))
# Si hay NA's, puedes manejarlos de diferentes maneras, por ejemplo, asignando un valor predeterminado o eliminando las filas con NA's.
# Luego, procedemos con el modelo de regresión lineal
regresion <- lm(consumo_combustible ~ cilindros + desplazamiento + potencia + peso + aceleracion + ano_modelo + origen, data = auto_mpg)
summary(regresion)
# Convertir la columna "potencia" a tipo numérico
auto_mpg$potencia <- as.numeric(auto_mpg$potencia)
# Verificar si hay NA's después de la conversión
sum(is.na(auto_mpg$potencia))
# Si hay NA's, puedes manejarlos de diferentes maneras, por ejemplo, asignando un valor predeterminado o eliminando las filas con NA's.
# Luego, procedemos con el modelo de regresión lineal
regresion <- lm(consumo_combustible ~ cilindros + desplazamiento + potencia + peso + aceleracion + ano_modelo + origen, data = auto_mpg)
summary(regresion)
regresion_ajustada <- lm(consumo_combustible ~ cilindros + desplazamiento + peso + ano_modelo + origen, data = auto_mpg)
summary(regresion_ajustada)
regresion_ajustada <- lm(consumo_combustible ~ peso + ano_modelo + origen, data = auto_mpg)
summary(regresion_ajustada)
nuevos_datos <- data.frame(
peso = 3000,
ano_modelo = 80,
origen = 1
)
# Hacer la predicción
prediccion <- predict(regresion_ajustada, nuevos_datos)
prediccion
plot(auto_mpg$desplazamiento, auto_mpg$consumo_combustible,
xlab = "Desplazamiento del motor (pulgadas cúbicas)",
ylab = "Consumo de combustible (millas por galón)",
main = "Relación entre el consumo de combustible y el desplazamiento del motor")
# Gráfico de barras: Distribución de cilindros
barplot(table(auto_mpg$cilindros),
xlab = "Número de cilindros",
ylab = "Frecuencia",
main = "Distribución de cilindros")
boxplot(auto_mpg$peso ~ auto_mpg$cilindros,
xlab = "Número de cilindros",
ylab = "Peso del vehículo (libras)",
main = "Peso del vehículo por número de cilindros")
barplot(table(auto_mpg$ano_modelo),
xlab = "Año del modelo",
ylab = "Frecuencia",
main = "Distribución de años del modelo")
library(dplyr)
regresion <- lm(consumo_combustible ~ cilindros + desplazamiento + potencia + peso + aceleracion + ano_modelo + origen, data = auto_mpg)
summary(regresion)
nuevos_datos <- data.frame(
cilindros = 8,
desplazamiento = 350,
potencia = 165,
peso = 3693,
aceleracion = 11.5,
ano_modelo = 70,
origen = 1
)
predict(regresion, nuevos_datos)
auto_mpg$potencia <- as.numeric(auto_mpg$potencia)
regresion_ajustada <- lm(consumo_combustible ~ peso + ano_modelo + origen, data = auto_mpg)
summary(regresion_ajustada)
nuevos_datos <- data.frame(
peso = 3000,
ano_modelo = 80,
origen = 1
)
# Hacer la predicción
prediccion <- predict(regresion_ajustada, nuevos_datos)
prediccion
auto_mpg <- read_csv("auto_mpg.csv")
# Importar el archivo auto_mpg.csv
auto_mpg <- read_csv("auto-mpg.csv")
